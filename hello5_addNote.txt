createOnNewBranch-20211209-2258

note-20211209-2310: 
checkout -b 新分支
會創+切到新分支
之後第一次要推
要打git push-u origin 新分支
新分支名稱要相同，才能推上去()

=> 第一次推就是用指令碼就是把符合名稱的分支推上去!
因為checkout -b 新分支，在還沒推之前，remote是沒有的


note-20211209-2315:
1.本檔案改名之後,在gitStatus會判定為刪除舊名稱 + 新增新名稱檔
	aka => 改名之後判定為新增的檔案
2.檔案改路徑後，反而判定為改名


note-20211209_2356:
===拷貝自gitHub合併筆記<<網頁合併方法>>
方法1-在github上面合併
1.去點網頁上的PullRequest，選擇要合併的分支後進入這邊打字的欄位
2.設定base=合併目的地 || compare=要和進目的去的分支

3.如果網頁顯示Able to Merge，則表示你跳到分支-到目前的期間
目的地沒有新的commit，所以可以直接合

---if若不能直接合---
4-1則local端要先切到目的分支，並打入git pull
然後再切回合進分支，打入git rebase (目的分支)

4-2.會遇到衝突，依樣手動編輯合併檔，解完後打入git rebase --continue
就會自動繼續rebase直到再次遇到衝突

4-3.此時會發現合入分支的push仍會失敗，因為該分支rebase後歷史紀錄的頭會改變
系統預防竄改歷史會檔 ，若執意要改，改打git push -f
並注意git push -f應只能在私人分支做


note-20211209_2357:
4-4.local分支做完4-3的步驟後，即可回到網頁，繼續操作(接回步驟3之後)
---endif若不能直接合---

5(緊接3之後).做完之後可以看到網頁上的兩方分支都還在
但注意local端的目的分支還是舊的，要chechout到目的分支之後，再按git pull
才能在本地目的分支拿到資料